/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
@mixin font-size($font-size, $line-height:true, $lh-ratio: 0.5){
    font-size:$font-size;
    font-size:($font-size / $base-font-size)*1rem;
    @if $line-height == true{
        $line-height-r: $base-line-height * $lh-ratio;
        line-height:ceil($font-size / $line-height-r + 0.001) * $lh-ratio * ($base-line-height / $font-size) + 0.01;
    }
}


/**
 * Convert basic px measurements into rem units
 */
@mixin rem($property, $values) {
    #{$property}:$values;
    @if $use-rem == true {
        @if type-of($values) == "number" {
            #{$property}:$values/$base-font-size*1rem;
        } @else {
            $rem-values:();
            @each $value in $values {
                @if type-of($value) == "number" and unit($value) == px {
                    $rem-values:append($rem-values, $value/$base-font-size*1rem);
                } @else {
                    $rem-values:append($rem-values, $value); 
                }
            }
            #{$property}:$rem-values;
        }        
    }
}

@function rem($value) {
    @if $use-rem == true and type-of($value) == "number" and unit($value) == px {
        @return $value/$base-font-size*1rem;
    } @else {
        @return $value;
    }
}




@mixin headings($from: 1, $to: 6){
    @if $from >= 1 and $to <= 6{
        $heading-selector: (unquote(""));
        @for $i from $from through $to {
            $heading-selector: $heading-selector, unquote("h#{$i}")
        }
        #{$heading-selector}{
            @content
        }
    }
}


@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}


@mixin keyframe ($animation-name){
    @-webkit-keyframes $animation-name{
        @content;
    }

    @-moz-keyframes $animation-name{
        @content;
    }

    @-ms-keyframes $animation-name{
        @content;
    }

    @-o-keyframes $animation-name{
        @content;
    }

    @keyframes $animation-name{
        @content;
    }
}



@mixin truncate($truncation-boundary){
    max-width:$truncation-boundary;
    white-space:nowrap;
    overflow:hidden;
    text-overflow:ellipsis;
}

@mixin arrow($arrow-edge, $arrow-location, $arrow-color, $border-color: $arrow-color){

    @if $arrow-edge == top{

        @extend %arrow--top;

        &:before{
            border-bottom-color:$border-color!important;
        }

        &:after{
            border-bottom-color:$arrow-color!important;
        }

        @if $arrow-location == left{
            @extend %arrow--left;
        }

        @if $arrow-location == center{
            @extend %arrow--center;
        }

        @if $arrow-location == right{
            @extend %arrow--right;
        }

    }

    @if $arrow-edge == right{

        @extend %arrow--far;

        &:before{
            border-left-color:$border-color!important;
        }

        &:after{
            border-left-color:$arrow-color!important;
        }

        @if $arrow-location == top{
            @extend %arrow--upper;
        }

        @if $arrow-location == center{
            @extend %arrow--middle;
        }

        @if $arrow-location == bottom{
            @extend %arrow--lower;
        }

    }

    @if $arrow-edge == bottom{

        @extend %arrow--bottom;

        &:before{
            border-top-color:$border-color!important;
        }

        &:after{
            border-top-color:$arrow-color!important;
        }

        @if $arrow-location == left{
            @extend %arrow--left;
        }

        @if $arrow-location == center{
            @extend %arrow--center;
        }

        @if $arrow-location == right{
            @extend %arrow--right;
        }

    }

    @if $arrow-edge == left{

        @extend %arrow--near;

        &:before{
            border-right-color:$border-color!important;
        }

        &:after{
            border-right-color:$arrow-color!important;
        }

        @if $arrow-location == top{
            @extend %arrow--upper;
        }

        @if $arrow-location == center{
            @extend %arrow--middle;
        }

        @if $arrow-location == bottom{
            @extend %arrow--lower;
        }

    }

}


$palm-end:              $lap-start - 1px;
$lap-end:               $desk-start - 1px;

@mixin media-query($media-query){

    @if $media-query == palm{

        @media only screen and (max-width:$palm-end) { @content; }

    }

    @if $media-query == lap{

        @media only screen and (min-width:$lap-start) and (max-width:$lap-end) { @content; }

    }

    @if $media-query == lap-and-up{

        @media only screen and (min-width:$lap-start) { @content; }

    }

    @if $media-query == portable{

        @media only screen and (max-width:$lap-end) { @content; }

    }

    @if $media-query == desk{

        @media only screen and (min-width:$desk-start) { @content; }

    }

    @if $media-query == desk-wide{

        @media only screen and (min-width: $desk-wide-start) { @content; }

    }

}
